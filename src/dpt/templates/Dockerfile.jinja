
# Do not modify this file - It was automatically generated by dpt. See git.io/dpt

ARG README_EXT={{ readme_ext | default('rst', true)}}
ARG SCRIPTS_PATH={{ scripts_path | default('/usr/local/sbin', true)}}

FROM {{ dev_image }}:{{ dev_tag }} as common
ARG README_EXT
ARG SCRIPTS_PATH
 
ENV POETRY_VIRTUALENVS_IN_PROJECT=true \
    PIP_DISABLE_PIP_VERSION_CHECK=1 {{ envs | default('', true) }}

>>> for command, args in build_reqs|flatten
RUN {{ command }} {{ args | join(' ')}}
>>> endfor

RUN pip install --no-cache-dir poetry=={{ poetry_version }}

RUN {{ request_file }} ${SCRIPTS_PATH}/pli git.io/pli.py  \
    && chmod +x ${SCRIPTS_PATH}/pli

WORKDIR /app
########################################################################################

FROM common as dev
ARG README_EXT


>>> for command, args in runtime_reqs|flatten
RUN {{ command }} {{ args | join(' ')}}
>>> endfor

ADD poetry.lock poetry.lock
RUN pli {{ package }} {{ extras_dev | default('', true) }}
ADD pyproject.toml poetry.lock README.${README_EXT} ./
ADD src src
ADD tests tests
RUN poetry install {{ extras_dev | default('', true) }}

########################################################################################

FROM common as builder
RUN pli {{ package }} --no-dev {{ extras | default('', true) }}

########################################################################################
FROM {{ prod_image }}:{{ prod_tag }} as production

ARG SCRIPTS_PATH

WORKDIR /app

>>> for command, args in runtime_reqs| flatten
RUN {{ command }} {{ args | join(" ")}}
>>> endfor


COPY --from=builder /app/.venv /app/.venv

>>> if entrypoint_script
ADD {{ entrypoint_script }} ${SCRIPTS_PATH}/entrypoint
ENTRYPOINT [ "entrypoint" ]
>>> else
ENTRYPOINT [ "{{ entrpoint_command }}" ]
>>> endif
CMD [ {{ cmd | strarray }} ]
########################################################################################
